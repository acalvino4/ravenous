{"version":3,"sources":["logo.svg","components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Business","business","this","props","react_default","a","createElement","className","src","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Hightest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","term","location","sortBy","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cb18e05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport './Business.css'\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        const business = this.props.business\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={business.imageSrc} alt=''/>\r\n                </div>\r\n                <h2>{business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{business.address}</p>\r\n                        <p>{business.city}</p>\r\n                        <p>{business.state+' '+business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{business.category}</h3>\r\n                        <h3 className=\"rating\">{business.rating}</h3>\r\n                        <p>{business.reviewCount}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Business","import React from 'react'\r\nimport './BusinessList.css'\r\nimport Business from '../Business/Business.js'\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {this.props.businesses.map(business => {\r\n                    return <Business\r\n                        business={business}\r\n                        key={business.id}\r\n                    />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BusinessList","import React from 'react'\r\nimport './SearchBar.css'\r\n\r\nconst sortByOptions = {\r\n    \"Best Match\": \"best_match\",\r\n    \"Hightest Rated\": \"rating\",\r\n    \"Most Reviewed\": \"review_count\"\r\n}\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleTermChange = this.handleTermChange.bind(this)\r\n        this.handleLocationChange = this.handleLocationChange.bind(this)\r\n        this.handleSearch = this.handleSearch.bind(this)\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'\r\n        }\r\n    }\r\n\r\n    getSortByClass(sortByOption) {\r\n        if (this.state.sortBy===sortByOption) {\r\n            return 'active'\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy: sortByOption})\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({term: event.target.value})\r\n    }\r\n\r\n    handleLocationChange(event) {\r\n        this.setState({location: event.target.value})\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term,this.state.location,this.state.sortBy)\r\n        event.preventDefault()\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = sortByOptions[sortByOption]\r\n            return (\r\n                <li\r\n                    key={sortByOptionValue}\r\n                    className={this.getSortByClass(sortByOptionValue)}\r\n                    onClick={this.handleSortByChange.bind(this,sortByOptionValue)}\r\n                >\r\n                    {sortByOption}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input\r\n                        placeholder=\"Search Businesses\"\r\n                        onChange={this.handleTermChange}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Where?\"\r\n                        onChange={this.handleLocationChange}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"SearchBar-submit\"\r\n                    onClick={this.handleSearch}\r\n                >\r\n                    <a>Let's Go</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar","const apiKey = 'K84Nk2Q5OwmSoNaemQyr8yao-c4-ipljcFluqY3CYtML7VtwkOb7-ovdBYyabSv8McniHv17IdZxgo5xEWJYlZMoUrivAWKGpfuCjQtCjB6O-hOtIS5IlANZe6c7XHYx'\r\n\r\nconst Yelp = {\r\n    search: function(term, location, sortBy) {\r\n        return fetch(\r\n            `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n            {headers: {\r\n                Authorization: `Bearer ${apiKey}`\r\n            }}\r\n        ).then(response => response.json()).then(jsonResponse => {\r\n            if(jsonResponse.businesses) {\r\n                return jsonResponse.businesses.map(business => {\r\n                    return {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count\r\n                    }\r\n                })\r\n            } else {\r\n                return []\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default Yelp","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList.js'\nimport SearchBar from './components/SearchBar/SearchBar.js'\nimport Yelp from './util/Yelp.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      businesses: [],\n    }\n    this.searchYelp = this.searchYelp.bind(this)\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({businesses: businesses})\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses}/> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}